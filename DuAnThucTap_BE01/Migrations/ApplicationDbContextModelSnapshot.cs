// <auto-generated />
using System;
using DuAnThucTap.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DuAnThucTap.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DuAnThucTap.Model.Blockleader", b =>
                {
                    b.Property<int>("Blockleaderid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Blockleaderid"));

                    b.Property<DateTime?>("Createdat")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Gradelevelid")
                        .HasColumnType("integer");

                    b.Property<int>("Schoolyearid")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Teacherid")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Updatedat")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Blockleaderid");

                    b.HasIndex("Gradelevelid");

                    b.HasIndex("Schoolyearid")
                        .IsUnique();

                    b.HasIndex("Teacherid");

                    b.ToTable("Blockleaders");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Campus", b =>
                {
                    b.Property<int>("Campusid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Campusid"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Campusname")
                        .HasColumnType("text");

                    b.Property<string>("Contactpersonemail")
                        .HasColumnType("text");

                    b.Property<string>("Contactpersonmobile")
                        .HasColumnType("text");

                    b.Property<string>("Contactpersonname")
                        .HasColumnType("text");

                    b.Property<string>("Imageurl")
                        .HasColumnType("text");

                    b.Property<string>("Phonenumber")
                        .HasColumnType("text");

                    b.Property<int>("Schoolinfoid")
                        .HasColumnType("integer");

                    b.Property<int?>("SchoolinformationSchoolinfoid")
                        .HasColumnType("integer");

                    b.HasKey("Campusid");

                    b.HasIndex("SchoolinformationSchoolinfoid");

                    b.ToTable("Campuses");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Class", b =>
                {
                    b.Property<int>("Classid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Classid"));

                    b.Property<string>("Classname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("Classtypeid")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Createdat")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Gradelevelid")
                        .HasColumnType("integer");

                    b.Property<int?>("Maxstudents")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<int?>("Schoolyearid")
                        .HasColumnType("integer");

                    b.Property<int?>("Subjectid")
                        .HasColumnType("integer");

                    b.Property<int?>("Teacherid")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Updatedat")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Classid");

                    b.HasIndex("Classtypeid");

                    b.HasIndex("Gradelevelid");

                    b.HasIndex("Schoolyearid");

                    b.HasIndex("Subjectid");

                    b.HasIndex("Teacherid");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("DuAnThucTap.Model.ClassSubject", b =>
                {
                    b.Property<int>("Classid")
                        .HasColumnType("integer");

                    b.Property<int>("Subjectid")
                        .HasColumnType("integer");

                    b.HasKey("Classid", "Subjectid");

                    b.HasIndex("Subjectid");

                    b.ToTable("ClassSubjects");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Classtype", b =>
                {
                    b.Property<int>("Classtypeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Classtypeid"));

                    b.Property<string>("Classtypename")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("Createdat")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Isactive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("Updatedat")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Classtypeid");

                    b.ToTable("Classtypes");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Department", b =>
                {
                    b.Property<int>("Departmentid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Departmentid"));

                    b.Property<DateTime?>("Createdat")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Departmentname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("Updatedat")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Departmentid");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Departmentleader", b =>
                {
                    b.Property<int>("Departmentleaderid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Departmentleaderid"));

                    b.Property<int>("Departmentid")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Schoolyearid")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Teacherid")
                        .HasColumnType("integer");

                    b.HasKey("Departmentleaderid");

                    b.HasIndex("Departmentid");

                    b.HasIndex("Schoolyearid");

                    b.HasIndex("Teacherid");

                    b.ToTable("Departmentleaders");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Grade", b =>
                {
                    b.Property<int>("Gradeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Gradeid"));

                    b.Property<DateTime?>("Gradeddate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Gradetypeid")
                        .HasColumnType("integer");

                    b.Property<int>("Instance")
                        .HasColumnType("integer");

                    b.Property<int>("Schoolid")
                        .HasColumnType("integer");

                    b.Property<decimal>("Score")
                        .HasColumnType("numeric");

                    b.Property<int>("Semesterid")
                        .HasColumnType("integer");

                    b.Property<int>("Studentid")
                        .HasColumnType("integer");

                    b.Property<int>("Subjectid")
                        .HasColumnType("integer");

                    b.HasKey("Gradeid");

                    b.HasIndex("Gradetypeid");

                    b.HasIndex("Schoolid");

                    b.HasIndex("Semesterid");

                    b.HasIndex("Subjectid");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Gradelevel", b =>
                {
                    b.Property<int>("Gradelevelid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Gradelevelid"));

                    b.Property<string>("Codegradelevel")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Createdat")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Gradelevelname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Teacherid")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Updatedat")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Gradelevelid");

                    b.HasIndex("Teacherid");

                    b.ToTable("Gradelevels");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Gradetype", b =>
                {
                    b.Property<int>("Gradetypeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Gradetypeid"));

                    b.Property<string>("Gradetypename")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Mininstancessemester1")
                        .HasColumnType("integer");

                    b.Property<int>("Mininstancessemester2")
                        .HasColumnType("integer");

                    b.Property<decimal>("Weightingfactor")
                        .HasColumnType("numeric");

                    b.HasKey("Gradetypeid");

                    b.ToTable("Gradetypes");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Schoolinformation", b =>
                {
                    b.Property<int>("Schoolinfoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Schoolinfoid"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("District")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Establishmentdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Faxnumber")
                        .HasColumnType("text");

                    b.Property<string>("Logourl")
                        .HasColumnType("text");

                    b.Property<string>("Phonenumber")
                        .HasColumnType("text");

                    b.Property<string>("Principalname")
                        .HasColumnType("text");

                    b.Property<string>("Principalphone")
                        .HasColumnType("text");

                    b.Property<string>("Province")
                        .HasColumnType("text");

                    b.Property<string>("Schoolname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Schooltype")
                        .HasColumnType("text");

                    b.Property<string>("Standardcode")
                        .HasColumnType("text");

                    b.Property<string>("Trainingmodel")
                        .HasColumnType("text");

                    b.Property<string>("Ward")
                        .HasColumnType("text");

                    b.Property<string>("Websiteurl")
                        .HasColumnType("text");

                    b.HasKey("Schoolinfoid");

                    b.ToTable("Schoolinformations");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Schoolyear", b =>
                {
                    b.Property<int>("Schoolyearid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Schoolyearid"));

                    b.Property<DateTime?>("Createdat")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Endyear")
                        .HasColumnType("integer");

                    b.Property<int>("Schoolinfoid")
                        .HasColumnType("integer");

                    b.Property<int?>("SchoolinformationSchoolinfoid")
                        .HasColumnType("integer");

                    b.Property<string>("Schoolyearname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Startyear")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Updatedat")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Schoolyearid");

                    b.HasIndex("SchoolinformationSchoolinfoid");

                    b.ToTable("Schoolyears");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Semester", b =>
                {
                    b.Property<int>("Semesterid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Semesterid"));

                    b.Property<DateTime?>("Createdat")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Enddate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Schoolyearid")
                        .HasColumnType("integer");

                    b.Property<string>("Semestername")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Startdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Updatedat")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Semesterid");

                    b.HasIndex("Schoolyearid");

                    b.ToTable("Semesters");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Subject", b =>
                {
                    b.Property<int>("Subjectid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Subjectid"));

                    b.Property<DateTime?>("Createdat")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Defaultperiodssem1")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<int?>("Defaultperiodssem2")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<int?>("Departmentid")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<int?>("Schoolyearid")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<string>("Subjectcode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Subjectname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Subjecttypeid")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Updatedat")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Subjectid");

                    b.HasIndex("Departmentid");

                    b.HasIndex("Schoolyearid");

                    b.HasIndex("Subjecttypeid");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Subjecttype", b =>
                {
                    b.Property<int>("Subjecttypeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Subjecttypeid"));

                    b.Property<DateTime?>("Createdat")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("Isactive")
                        .HasColumnType("boolean");

                    b.Property<string>("Subjecttypename")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("Updatedat")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Subjecttypeid");

                    b.ToTable("Subjecttypes");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Teacher", b =>
                {
                    b.Property<int>("Teacherid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Teacherid"));

                    b.Property<string>("AddressDistrict")
                        .HasColumnType("text");

                    b.Property<string>("AddressProvincecity")
                        .HasColumnType("text");

                    b.Property<string>("AddressStreet")
                        .HasColumnType("text");

                    b.Property<string>("AddressWard")
                        .HasColumnType("text");

                    b.Property<string>("Alias")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Createdat")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Dateofbirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Dateofjoininggroup")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Dateofjoiningtheparty")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Departmentid")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ethnicity")
                        .HasColumnType("text");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Hiredate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("Ispartymember")
                        .HasColumnType("boolean");

                    b.Property<string>("Nationality")
                        .HasColumnType("text");

                    b.Property<string>("Phonenumber")
                        .HasColumnType("text");

                    b.Property<string>("Religion")
                        .HasColumnType("text");

                    b.Property<int?>("Schoolyearid")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<int?>("Subjectid")
                        .HasColumnType("integer");

                    b.Property<string>("Teachercode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Updatedat")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Teacherid");

                    b.HasIndex("Departmentid");

                    b.HasIndex("Schoolyearid");

                    b.HasIndex("Subjectid");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Teachingassignment", b =>
                {
                    b.Property<int>("Assignmentid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Assignmentid"));

                    b.Property<int?>("Classtypeid")
                        .HasColumnType("integer");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<int>("Schoolyearid")
                        .HasColumnType("integer");

                    b.Property<int>("Subjectid")
                        .HasColumnType("integer");

                    b.Property<int>("Teacherid")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Teachingenddate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Teachingstartdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Topicid")
                        .HasColumnType("integer");

                    b.HasKey("Assignmentid");

                    b.HasIndex("Classtypeid");

                    b.HasIndex("Schoolyearid");

                    b.HasIndex("Subjectid");

                    b.HasIndex("Teacherid");

                    b.HasIndex("Topicid");

                    b.ToTable("Teachingassignments");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Topiclist", b =>
                {
                    b.Property<int>("Topicid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Topicid"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Teachingenddate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Topicname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Topicid");

                    b.ToTable("Topiclists");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Blockleader", b =>
                {
                    b.HasOne("DuAnThucTap.Model.Gradelevel", "Gradelevel")
                        .WithMany("Blockleaders")
                        .HasForeignKey("Gradelevelid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DuAnThucTap.Model.Schoolyear", "Schoolyear")
                        .WithOne("Blockleaders")
                        .HasForeignKey("DuAnThucTap.Model.Blockleader", "Schoolyearid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DuAnThucTap.Model.Teacher", "Teacher")
                        .WithMany("Blockleaders")
                        .HasForeignKey("Teacherid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gradelevel");

                    b.Navigation("Schoolyear");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Campus", b =>
                {
                    b.HasOne("DuAnThucTap.Model.Schoolinformation", "Schoolinformation")
                        .WithMany("Campuses")
                        .HasForeignKey("SchoolinformationSchoolinfoid");

                    b.Navigation("Schoolinformation");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Class", b =>
                {
                    b.HasOne("DuAnThucTap.Model.Classtype", "Classtype")
                        .WithMany("Classes")
                        .HasForeignKey("Classtypeid");

                    b.HasOne("DuAnThucTap.Model.Gradelevel", "Gradelevel")
                        .WithMany("Classes")
                        .HasForeignKey("Gradelevelid");

                    b.HasOne("DuAnThucTap.Model.Schoolyear", "Schoolyear")
                        .WithMany("Classes")
                        .HasForeignKey("Schoolyearid");

                    b.HasOne("DuAnThucTap.Model.Subject", null)
                        .WithMany("Classes")
                        .HasForeignKey("Subjectid");

                    b.HasOne("DuAnThucTap.Model.Teacher", "Teacher")
                        .WithMany("Classes")
                        .HasForeignKey("Teacherid");

                    b.Navigation("Classtype");

                    b.Navigation("Gradelevel");

                    b.Navigation("Schoolyear");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("DuAnThucTap.Model.ClassSubject", b =>
                {
                    b.HasOne("DuAnThucTap.Model.Class", "Class")
                        .WithMany("ClassSubjects")
                        .HasForeignKey("Classid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DuAnThucTap.Model.Subject", "Subject")
                        .WithMany("ClassSubjects")
                        .HasForeignKey("Subjectid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Departmentleader", b =>
                {
                    b.HasOne("DuAnThucTap.Model.Department", "Department")
                        .WithMany()
                        .HasForeignKey("Departmentid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DuAnThucTap.Model.Schoolyear", "Schoolyear")
                        .WithMany()
                        .HasForeignKey("Schoolyearid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DuAnThucTap.Model.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("Teacherid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Schoolyear");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Grade", b =>
                {
                    b.HasOne("DuAnThucTap.Model.Gradetype", "Gradetype")
                        .WithMany("Grades")
                        .HasForeignKey("Gradetypeid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DuAnThucTap.Model.Schoolinformation", "School")
                        .WithMany("Grades")
                        .HasForeignKey("Schoolid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DuAnThucTap.Model.Semester", "Semester")
                        .WithMany("Grades")
                        .HasForeignKey("Semesterid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DuAnThucTap.Model.Subject", "Subject")
                        .WithMany("Grades")
                        .HasForeignKey("Subjectid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gradetype");

                    b.Navigation("School");

                    b.Navigation("Semester");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Gradelevel", b =>
                {
                    b.HasOne("DuAnThucTap.Model.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("Teacherid");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Schoolyear", b =>
                {
                    b.HasOne("DuAnThucTap.Model.Schoolinformation", "Schoolinformation")
                        .WithMany("Schoolyears")
                        .HasForeignKey("SchoolinformationSchoolinfoid");

                    b.Navigation("Schoolinformation");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Semester", b =>
                {
                    b.HasOne("DuAnThucTap.Model.Schoolyear", "Schoolyear")
                        .WithMany("Semesters")
                        .HasForeignKey("Schoolyearid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schoolyear");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Subject", b =>
                {
                    b.HasOne("DuAnThucTap.Model.Department", "Department")
                        .WithMany("Subjects")
                        .HasForeignKey("Departmentid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DuAnThucTap.Model.Schoolyear", "Schoolyear")
                        .WithMany("Subjects")
                        .HasForeignKey("Schoolyearid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DuAnThucTap.Model.Subjecttype", "Subjecttype")
                        .WithMany("Subjects")
                        .HasForeignKey("Subjecttypeid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Schoolyear");

                    b.Navigation("Subjecttype");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Teacher", b =>
                {
                    b.HasOne("DuAnThucTap.Model.Department", "Department")
                        .WithMany("Teachers")
                        .HasForeignKey("Departmentid");

                    b.HasOne("DuAnThucTap.Model.Schoolyear", "Schoolyear")
                        .WithMany("Teachers")
                        .HasForeignKey("Schoolyearid");

                    b.HasOne("DuAnThucTap.Model.Subject", "Subject")
                        .WithMany("Teachers")
                        .HasForeignKey("Subjectid");

                    b.Navigation("Department");

                    b.Navigation("Schoolyear");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Teachingassignment", b =>
                {
                    b.HasOne("DuAnThucTap.Model.Classtype", "Classtype")
                        .WithMany("Teachingassignments")
                        .HasForeignKey("Classtypeid");

                    b.HasOne("DuAnThucTap.Model.Schoolyear", "Schoolyear")
                        .WithMany()
                        .HasForeignKey("Schoolyearid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DuAnThucTap.Model.Subject", "Subject")
                        .WithMany("Teachingassignments")
                        .HasForeignKey("Subjectid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DuAnThucTap.Model.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("Teacherid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DuAnThucTap.Model.Topiclist", "Topic")
                        .WithMany("Teachingassignments")
                        .HasForeignKey("Topicid");

                    b.Navigation("Classtype");

                    b.Navigation("Schoolyear");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Class", b =>
                {
                    b.Navigation("ClassSubjects");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Classtype", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("Teachingassignments");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Department", b =>
                {
                    b.Navigation("Subjects");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Gradelevel", b =>
                {
                    b.Navigation("Blockleaders");

                    b.Navigation("Classes");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Gradetype", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Schoolinformation", b =>
                {
                    b.Navigation("Campuses");

                    b.Navigation("Grades");

                    b.Navigation("Schoolyears");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Schoolyear", b =>
                {
                    b.Navigation("Blockleaders");

                    b.Navigation("Classes");

                    b.Navigation("Semesters");

                    b.Navigation("Subjects");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Semester", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Subject", b =>
                {
                    b.Navigation("ClassSubjects");

                    b.Navigation("Classes");

                    b.Navigation("Grades");

                    b.Navigation("Teachers");

                    b.Navigation("Teachingassignments");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Subjecttype", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Teacher", b =>
                {
                    b.Navigation("Blockleaders");

                    b.Navigation("Classes");
                });

            modelBuilder.Entity("DuAnThucTap.Model.Topiclist", b =>
                {
                    b.Navigation("Teachingassignments");
                });
#pragma warning restore 612, 618
        }
    }
}
