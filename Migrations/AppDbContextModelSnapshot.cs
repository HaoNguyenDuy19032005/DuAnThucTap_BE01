// <auto-generated />
using System;
using DuAnThucTapNhom3.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DuAnThucTapNhom3.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DuAnThucTapNhom3.Models.Class", b =>
                {
                    b.Property<int>("Classid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("classid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Classid"));

                    b.Property<string>("Classname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("classname");

                    b.Property<int?>("Classtypeid")
                        .HasColumnType("integer")
                        .HasColumnName("classtypeid");

                    b.Property<DateTime?>("Createdat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdat")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("Gradelevelid")
                        .HasColumnType("integer")
                        .HasColumnName("gradelevelid");

                    b.Property<int?>("Homeroomteacherid")
                        .HasColumnType("integer")
                        .HasColumnName("homeroomteacherid");

                    b.Property<int?>("Maxstudents")
                        .HasColumnType("integer")
                        .HasColumnName("maxstudents");

                    b.Property<string>("Originalfilename")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("originalfilename");

                    b.Property<int?>("Schoolyearid")
                        .HasColumnType("integer")
                        .HasColumnName("schoolyearid");

                    b.Property<string>("Storedfilepath")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("storedfilepath");

                    b.Property<int?>("Subjectid")
                        .HasColumnType("integer")
                        .HasColumnName("subjectid");

                    b.Property<DateTime?>("Updatedat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updatedat")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Classid");

                    b.HasIndex("Classtypeid");

                    b.HasIndex("Gradelevelid");

                    b.HasIndex("Subjectid");

                    b.ToTable("classes", (string)null);
                });

            modelBuilder.Entity("DuAnThucTapNhom3.Models.Classtype", b =>
                {
                    b.Property<int>("Classtypeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("classtypeid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Classtypeid"));

                    b.Property<string>("Classtypename")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("classtypename");

                    b.Property<DateTime?>("Createdat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdat")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool?>("Isactive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasColumnName("isactive")
                        .HasDefaultValueSql("true");

                    b.Property<DateTime?>("Updatedat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updatedat")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Classtypeid");

                    b.ToTable("classtypes", (string)null);
                });

            modelBuilder.Entity("DuAnThucTapNhom3.Models.Department", b =>
                {
                    b.Property<int>("Departmentid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("departmentid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Departmentid"));

                    b.Property<DateTime?>("Createdat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdat")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Departmentname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("departmentname");

                    b.Property<int?>("Headteacherid")
                        .HasColumnType("integer")
                        .HasColumnName("headteacherid");

                    b.Property<DateTime?>("Updatedat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updatedat")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Departmentid");

                    b.HasIndex("Headteacherid");

                    b.ToTable("departments", (string)null);
                });

            modelBuilder.Entity("DuAnThucTapNhom3.Models.Gradelevel", b =>
                {
                    b.Property<int>("Gradelevelid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("gradelevelid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Gradelevelid"));

                    b.Property<string>("Codegradelevel")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("codegradelevel");

                    b.Property<DateTime?>("Createdat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdat")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Gradelevelname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("gradelevelname");

                    b.Property<int?>("Headteacherid")
                        .HasColumnType("integer")
                        .HasColumnName("headteacherid");

                    b.Property<DateTime?>("Updatedat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updatedat")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Gradelevelid");

                    b.HasIndex(new[] { "Codegradelevel" }, "gradelevels_codegradelevel_key")
                        .IsUnique();

                    b.ToTable("gradelevels", (string)null);
                });

            modelBuilder.Entity("DuAnThucTapNhom3.Models.LoginLog", b =>
                {
                    b.Property<int>("LoginLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LoginLogId"));

                    b.Property<DateTime>("LoginTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("LoginLogId");

                    b.HasIndex("UserId");

                    b.ToTable("LoginLogs");
                });

            modelBuilder.Entity("DuAnThucTapNhom3.Models.Schoolyear", b =>
                {
                    b.Property<int>("Schoolyearid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("schoolyearid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Schoolyearid"));

                    b.Property<DateTime?>("Createdat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdat")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("Endyear")
                        .HasColumnType("integer")
                        .HasColumnName("endyear");

                    b.Property<int>("SchoolYearlyStatusId")
                        .HasColumnType("integer");

                    b.Property<string>("Schoolyearname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("schoolyearname");

                    b.Property<int>("Startyear")
                        .HasColumnType("integer")
                        .HasColumnName("startyear");

                    b.Property<DateTime?>("Updatedat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updatedat")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Schoolyearid");

                    b.HasIndex(new[] { "Schoolyearname" }, "schoolyears_schoolyearname_key")
                        .IsUnique();

                    b.ToTable("schoolyears", (string)null);
                });

            modelBuilder.Entity("DuAnThucTapNhom3.Models.SchoolYearlyStatus", b =>
                {
                    b.Property<int>("IdSchoolYearlyStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdSchoolYearlyStatus"));

                    b.Property<int?>("ClassId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("GradelevelId")
                        .HasColumnType("integer");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<int?>("SchoolYearId")
                        .HasColumnType("integer");

                    b.Property<int?>("SemesterId")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<int?>("StudentId")
                        .HasColumnType("integer");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("integer");

                    b.Property<int?>("Teacherid")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("IdSchoolYearlyStatus");

                    b.HasIndex("ClassId");

                    b.HasIndex("GradelevelId");

                    b.HasIndex("SchoolYearId");

                    b.HasIndex("SemesterId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TeacherId");

                    b.HasIndex("Teacherid");

                    b.HasIndex("UserId");

                    b.ToTable("SchoolYearlyStatuses");
                });

            modelBuilder.Entity("DuAnThucTapNhom3.Models.Semester", b =>
                {
                    b.Property<int>("Semesterid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("semesterid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Semesterid"));

                    b.Property<DateTime?>("Createdat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdat")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("enddate");

                    b.Property<int>("Schoolyearid")
                        .HasColumnType("integer")
                        .HasColumnName("schoolyearid");

                    b.Property<string>("Semestername")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("semestername");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("startdate");

                    b.Property<DateTime?>("Updatedat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updatedat")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Semesterid");

                    b.HasIndex(new[] { "Schoolyearid" }, "idx_semesters_schoolyearid");

                    b.ToTable("semesters", (string)null);
                });

            modelBuilder.Entity("DuAnThucTapNhom3.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("StudentId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Classid")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StudentCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("StudentSemesterSummarysSummaryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("StudentId");

                    b.HasIndex("Classid");

                    b.HasIndex("StudentSemesterSummarysSummaryId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("DuAnThucTapNhom3.Models.StudentSemesterSummary", b =>
                {
                    b.Property<int>("SummaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SummaryId"));

                    b.Property<double>("AverageScore")
                        .HasColumnType("double precision");

                    b.Property<int?>("Classid")
                        .HasColumnType("integer");

                    b.Property<int>("SemesterId")
                        .HasColumnType("integer");

                    b.HasKey("SummaryId");

                    b.HasIndex("Classid");

                    b.HasIndex("SemesterId");

                    b.ToTable("StudentSemesterSummaries");
                });

            modelBuilder.Entity("DuAnThucTapNhom3.Models.Subject", b =>
                {
                    b.Property<int>("Subjectid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("subjectid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Subjectid"));

                    b.Property<DateTime?>("Createdat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdat")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("Defaultperiodssem1")
                        .HasColumnType("integer")
                        .HasColumnName("defaultperiodssem1");

                    b.Property<int?>("Defaultperiodssem2")
                        .HasColumnType("integer")
                        .HasColumnName("defaultperiodssem2");

                    b.Property<int?>("Departmentid")
                        .HasColumnType("integer")
                        .HasColumnName("departmentid");

                    b.Property<string>("Subjectcode")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("subjectcode");

                    b.Property<string>("Subjectname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("subjectname");

                    b.Property<int?>("Subjecttypeid")
                        .HasColumnType("integer")
                        .HasColumnName("subjecttypeid");

                    b.Property<DateTime?>("Updatedat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updatedat")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Subjectid");

                    b.HasIndex("Departmentid");

                    b.HasIndex("Subjecttypeid");

                    b.HasIndex(new[] { "Subjectcode" }, "subjects_subjectcode_key")
                        .IsUnique();

                    b.ToTable("subjects", (string)null);
                });

            modelBuilder.Entity("DuAnThucTapNhom3.Models.Subjecttype", b =>
                {
                    b.Property<int>("Subjecttypeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("subjecttypeid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Subjecttypeid"));

                    b.Property<DateTime?>("Createdat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdat")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool?>("Isactive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasColumnName("isactive")
                        .HasDefaultValueSql("true");

                    b.Property<string>("Subjecttypename")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("subjecttypename");

                    b.Property<DateTime?>("Updatedat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updatedat")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Subjecttypeid");

                    b.ToTable("subjecttypes", (string)null);
                });

            modelBuilder.Entity("DuAnThucTapNhom3.Models.Teacher", b =>
                {
                    b.Property<int>("Teacherid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("teacherid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Teacherid"));

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("fullname");

                    b.Property<int>("SchoolYearlyStatusId")
                        .HasColumnType("integer");

                    b.HasKey("Teacherid");

                    b.ToTable("teachers", (string)null);
                });

            modelBuilder.Entity("DuAnThucTapNhom3.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DuAnThucTapNhom3.Models.Class", b =>
                {
                    b.HasOne("DuAnThucTapNhom3.Models.Classtype", "Classtype")
                        .WithMany("Classes")
                        .HasForeignKey("Classtypeid")
                        .HasConstraintName("classes_classtypeid_fkey");

                    b.HasOne("DuAnThucTapNhom3.Models.Gradelevel", "Gradelevel")
                        .WithMany("Classes")
                        .HasForeignKey("Gradelevelid")
                        .HasConstraintName("classes_gradelevelid_fkey");

                    b.HasOne("DuAnThucTapNhom3.Models.Subject", "Subject")
                        .WithMany("Classes")
                        .HasForeignKey("Subjectid")
                        .HasConstraintName("classes_subjectid_fkey");

                    b.Navigation("Classtype");

                    b.Navigation("Gradelevel");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("DuAnThucTapNhom3.Models.Department", b =>
                {
                    b.HasOne("DuAnThucTapNhom3.Models.Teacher", "Headteacher")
                        .WithMany("Departments")
                        .HasForeignKey("Headteacherid")
                        .HasConstraintName("fk_departments_teachers");

                    b.Navigation("Headteacher");
                });

            modelBuilder.Entity("DuAnThucTapNhom3.Models.LoginLog", b =>
                {
                    b.HasOne("DuAnThucTapNhom3.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DuAnThucTapNhom3.Models.SchoolYearlyStatus", b =>
                {
                    b.HasOne("DuAnThucTapNhom3.Models.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("DuAnThucTapNhom3.Models.Gradelevel", "Gradelevel")
                        .WithMany()
                        .HasForeignKey("GradelevelId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("DuAnThucTapNhom3.Models.Schoolyear", "SchoolYear")
                        .WithMany("SchoolYearlyStatuses")
                        .HasForeignKey("SchoolYearId");

                    b.HasOne("DuAnThucTapNhom3.Models.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("DuAnThucTapNhom3.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.HasOne("DuAnThucTapNhom3.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("DuAnThucTapNhom3.Models.Teacher", null)
                        .WithMany("SchoolYearlyStatuses")
                        .HasForeignKey("Teacherid");

                    b.HasOne("DuAnThucTapNhom3.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Gradelevel");

                    b.Navigation("SchoolYear");

                    b.Navigation("Semester");

                    b.Navigation("Student");

                    b.Navigation("Teacher");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DuAnThucTapNhom3.Models.Semester", b =>
                {
                    b.HasOne("DuAnThucTapNhom3.Models.Schoolyear", "Schoolyear")
                        .WithMany("Semesters")
                        .HasForeignKey("Schoolyearid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_schoolyear");

                    b.Navigation("Schoolyear");
                });

            modelBuilder.Entity("DuAnThucTapNhom3.Models.Student", b =>
                {
                    b.HasOne("DuAnThucTapNhom3.Models.Class", "Class")
                        .WithMany("Students")
                        .HasForeignKey("Classid");

                    b.HasOne("DuAnThucTapNhom3.Models.StudentSemesterSummary", "StudentSemesterSummarys")
                        .WithMany("students")
                        .HasForeignKey("StudentSemesterSummarysSummaryId");

                    b.Navigation("Class");

                    b.Navigation("StudentSemesterSummarys");
                });

            modelBuilder.Entity("DuAnThucTapNhom3.Models.StudentSemesterSummary", b =>
                {
                    b.HasOne("DuAnThucTapNhom3.Models.Class", null)
                        .WithMany("StudentSemesterSummaries")
                        .HasForeignKey("Classid");

                    b.HasOne("DuAnThucTapNhom3.Models.Semester", "Semester")
                        .WithMany("StudentSemesterSummaries")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("DuAnThucTapNhom3.Models.Subject", b =>
                {
                    b.HasOne("DuAnThucTapNhom3.Models.Department", "Department")
                        .WithMany("Subjects")
                        .HasForeignKey("Departmentid")
                        .HasConstraintName("subjects_departmentid_fkey");

                    b.HasOne("DuAnThucTapNhom3.Models.Subjecttype", "Subjecttype")
                        .WithMany("Subjects")
                        .HasForeignKey("Subjecttypeid")
                        .HasConstraintName("subjects_subjecttypeid_fkey");

                    b.Navigation("Department");

                    b.Navigation("Subjecttype");
                });

            modelBuilder.Entity("DuAnThucTapNhom3.Models.Class", b =>
                {
                    b.Navigation("StudentSemesterSummaries");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("DuAnThucTapNhom3.Models.Classtype", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("DuAnThucTapNhom3.Models.Department", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("DuAnThucTapNhom3.Models.Gradelevel", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("DuAnThucTapNhom3.Models.Schoolyear", b =>
                {
                    b.Navigation("SchoolYearlyStatuses");

                    b.Navigation("Semesters");
                });

            modelBuilder.Entity("DuAnThucTapNhom3.Models.Semester", b =>
                {
                    b.Navigation("StudentSemesterSummaries");
                });

            modelBuilder.Entity("DuAnThucTapNhom3.Models.StudentSemesterSummary", b =>
                {
                    b.Navigation("students");
                });

            modelBuilder.Entity("DuAnThucTapNhom3.Models.Subject", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("DuAnThucTapNhom3.Models.Subjecttype", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("DuAnThucTapNhom3.Models.Teacher", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("SchoolYearlyStatuses");
                });
#pragma warning restore 612, 618
        }
    }
}
